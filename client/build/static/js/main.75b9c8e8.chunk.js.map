{"version":3,"sources":["utils/API.js","components/Card/Card.js","components/SearchBar/SearchBar.js","components/Wrapper/Wrapper.js","App.js","registerServiceWorker.js","index.js"],"names":["API","search","query","axios","get","saveBook","object","post","then","response","console","log","catch","error","Card","props","react_default","a","createElement","className","title","authors","src","image","alt","width","description","href","link","target","rel","onClick","index","SearchBar","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","handleFormSubmit","Wrapper","state","result","saved","concat","_this","setState","this","searchBooks","res","data","items","err","event","preventDefault","separateAuthors","array","length","join","checkForThumbnail","item","volumeInfo","imageLinks","thumbnail","_this2","SearchBar_SearchBar","map","i","Card_Card","key","infoLink","Component","App","components_Wrapper_Wrapper","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.75b9c8e8.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL + query);\n  },\n\n  saveBook: function(object) {\n    return axios.post('/api/books/saveBook', object)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n};\n","import React from 'react';\nimport './style.css';\n\nfunction Card(props) {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                            <h5 className=\"card-title\">{ props.title }</h5>\n                            <h6 className=\"card-subttle\">Author(s): { props.authors }</h6>\n                            <img src = { props.image } alt = { props.title } width = \"200px\"></img>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body scroll-box\">\n                            <p>{ props.description }</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                            <a href={ props.link } target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary my-button\">Learn More</a>\n                            <button className=\"btn btn-warning my-button\" onClick={ () => props.saveBook(props.index) }>Save</button>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr />\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport './style.css'\n\nfunction SearchBar(props) {\n  return (\n    <form>\n        <div className=\"form-group\">\n            <label htmlFor=\"search\">Search:</label>\n            <input\n                onChange={props.handleInputChange}\n                value={props.search}\n                name=\"search\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search For a Book\"\n                id=\"search\"\n            />\n            <br />\n            <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n                Search\n            </button>\n        </div>\n    </form>\n  );\n}\n\nexport default SearchBar;","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Card from \"../Card/Card\";\n\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nclass Wrapper extends Component {\n  state = {\n    result: [],\n    saved: {},\n    search: \"\"\n  };\n\n\n  componentDidMount() {\n    console.log(this.state);\n  }\n  saveBook = (index) => {\n\n    console.log(`Index of saved result: ${index}`);\n    this.setState({\n      saved: this.state.result[index]\n      }, function() {\n        API.saveBook(this.state.saved)\n      // }).then(function() {\n      //   console.log(\"Book has been saved\");\n      // }).catch(err => console.log(err));\n\n    }\n  )};\n\n  // COMPLETE\n  searchBooks = query => {\n    API.search(query)\n      .then(res => {\n        this.setState({ result: res.data.items });\n      }).catch(err => console.log(err));       \n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    this.setState({\n      search: value\n    });\n  }; \n\n//   // When the form is submitted, search the Google Books API for the value of `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(this.state.search);\n    this.searchBooks(this.state.search);\n  };\n\n  separateAuthors = (array) => {\n      if (array.length > 1) {\n          return array.join(\", \");\n      } else {\n          return array;\n      }\n  }\n\n  checkForThumbnail = (item) => {\n    console.log(item)\n    if (item.volumeInfo.imageLinks) {\n      return item.volumeInfo.imageLinks.thumbnail\n    } else {\n      return \"./images/image-not-available.png\"\n    }\n  }\n\n  render() {\n    return (\n\n        <div className=\"container\">\n        <SearchBar \n            search={this.state.search}\n            handleInputChange={this.handleInputChange}\n            handleFormSubmit={this.handleFormSubmit}\n        />\n        \n        { (this.state.result[0])\n            ? \n            this.state.result.map((item, i) => (\n                <Card\n                    key={ i }\n                    index={ i }\n                    authors={ this.separateAuthors(item.volumeInfo.authors) }\n                    description={ item.volumeInfo.description }\n                    // image={ item.volumeInfo.imageLinks.thumbnail }\n                    image={ this.checkForThumbnail(item) }\n                    link={ item.volumeInfo.infoLink }\n                    title={ item.volumeInfo.title }\n                    saveBook={ this.saveBook }\n                />\n            ))\n            :\n            <h3>No Results to Display</h3>\n        }\n\n        {/* {this.state.result.Title ? (\n            <MovieDetail\n              title={this.state.result.Title}\n              src={this.state.result.Poster}\n              director={this.state.result.Director}\n              genre={this.state.result.Genre}\n              released={this.state.result.Released}\n            />\n          ) : (\n            <h3>No Results to Display</h3>\n          )} */}\n\n    </div>\n    );\n  }\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper/Wrapper\"\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper />\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}